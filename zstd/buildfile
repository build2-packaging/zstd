c.poptions += "-DZSTD_MULTITHREAD"

if ($c.target.class != 'windows')
    c.libs += "-lpthread"

./: lib{zstd}: \
    lib/common/{h c}{*} \
    lib/compress/{h c}{*} \
    lib/decompress/{h c}{*} \
    lib/dictBuilder/{h c}{*} \
    lib/h{zdict zstd zstd_errors}
{
    cc.export.poptions += "-DZSTD_MULTITHREAD" "-I$src_base/lib"
}

enable_assembly = (($c.target.class == 'macos') || ($c.target.class == 'linux'))
if ($enable_assembly)
{
    lib{zstd}: c.coptions += "-mbmi"
}

sources_assembly = huf_decompress_amd64.S

for f: $sources_assembly
{
    lib/decompress/obja{$name($f)...a.o} lib/decompress/objs{$name($f)...so.o}: lib/decompress/$f
    {{
        diag as $>
        $c.path -o $path($>) -c $path($<[0])
    }}
    lib{zstd}: lib/decompress/file{$f} lib/decompress/obj{$name($f)}: include = $enable_assembly
}

if ($c.target.class == 'windows')
{
    c.poptions += "-DWIN32"
    lib/{hbmis objs}{*}: c.poptions += "-DZSTD_DLL_EXPORT=1"
    libs{zstd}: cc.export.poptions += "-DZSTD_DLL_IMPORT=1" "-DWIN32"
}

{hbmis objs}{*}: c.poptions += "-DXXH_EXPORT=1"
libs{zstd}: cc.export.poptions += "-DXXH_IMPORT=1"

c.poptions += "-DBUILD2_ZSTD_VERSION=\"$version\"" "-I$src_base/programs"
./: exe{zstd}: programs/{h c}{* -zstdcli} programs/file{zstdcli.c} c{zstdcli} lib{zstd}

h{**}: install = false

lib/h{*}: install = include/
